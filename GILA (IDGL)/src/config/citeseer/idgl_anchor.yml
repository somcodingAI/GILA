# Data
data_type: 'network'
dataset_name: 'citeseer'
data_dir: '../data/citeseer/'
pretrained: null
task_type: 'classification'

# Output
out_dir: '../out/citeseer/idgl_anchor'



seed: 14514

# Model architecture
model_name: 'GraphClf'

# Scalable graph learning
scalable_run: True
num_anchors: 1400 # 1400!


hidden_size: 16


# Bert configure
use_bert: False



# Regularization
dropout: 0.5 # 0.5!
gl_dropout: 0 # 0!



# Graph neural networks
bignn: False
graph_module: 'gcn'
graph_type: 'dynamic'
graph_learn: True
graph_metric_type: 'weighted_cosine' # attention (best), kernel, gat_attention
graph_skip_conn: 0.6 # GL: 0.9, IGL: 0.6!
update_adj_ratio: 0.5 # 0.5!
graph_include_self: False
graph_learn_regularization: True
smoothness_ratio: 0.5 # 0.4, IGL: 0.5!
degree_ratio: 0.1 # 0.1!
sparsity_ratio: 0.2 # 0.2, IGL: 0.2!
graph_learn_ratio: 0 # 0
graph_learn_hidden_size: null # attention: 70
graph_learn_epsilon: 0.2 # weighted_cosine: 0.2!
graph_learn_topk: null # attention: 220
# graph_learn_hidden_size2: 70 # attention: 70
# graph_learn_epsilon2: 0.3 # weighted_cosine: 0.3
# graph_learn_topk2: null # attention: 220
graph_learn_num_pers: 4 # attention: 8, weighted_cosine: 1, IGL: 4!



graph_hops: 2

# GAT only
gat_nhead: 8
gat_alpha: 0.2


# Training
optimizer: 'adam'
learning_rate: 0.01 # GAT: 0.005, GCN: 0.0005
weight_decay: 0.0005 # GAT: 5e-4, GCN: 0.02, GGNN: 0
lr_patience: 2
lr_reduce_factor: 0.5 # GCN: 0.5
grad_clipping: null
grad_accumulated_steps: 1
eary_stop_metric: 'nloss' # negative loss
pretrain_epoch: 0 # 0!
max_iter: 10 # 10
eps_adj: 2e-3 # IGL: 2e-3!


# note: RL is not used
rl_ratio: 0  # use mixed objective if > 0; ratio of RL in the loss function
rl_ratio_power: 1  # increase rl_ratio by **= rl_ratio_power after each epoch; (0, 1]
rl_start_epoch: 1  # start RL at which epoch (later start can ensure a strong baseline)?
max_rl_ratio: 0.99
rl_reward_metric: 'acc'
rl_wmd_ratio: 0


random_seed: 1234
shuffle: True # Whether to shuffle the examples during training
max_epochs: 10000
patience: 100
verbose: 20
print_every_epochs: 500 # Print every X epochs


# Testing
out_predictions: False # Whether to output predictions
save_params: True # Whether to save params
logging: True # Turn it off for Codalab


# Device
no_cuda: False
cuda_id: 0
